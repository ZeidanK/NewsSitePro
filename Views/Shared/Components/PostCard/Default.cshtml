@model NewsSitePro.Models.PostCardViewModel
@{
    var post = Model.Post;
    var config = Model.Config;
    var publishDate = post.PublishDate.ToString("MMM dd, yyyy");
}

<div class="@config.ContainerClass @config.CssClass" data-post-id="@post.ArticleID">
    @if (config.ShowAuthorInfo)
    {
        <div class="post-header">
            <div class="post-user-info">
                <a href="/UserProfile/@post.UserID" class="user-link">
                    <div class="post-avatar">
                        @{
                            // Handle both relative and absolute paths for profile picture
                            var profilePictureUrl = !string.IsNullOrEmpty(post.UserProfilePicture) 
                                ? (post.UserProfilePicture.StartsWith("http") 
                                    ? post.UserProfilePicture 
                                    : post.UserProfilePicture.StartsWith("/") 
                                        ? post.UserProfilePicture 
                                        : "/" + post.UserProfilePicture)
                                : null;
                        }
                        @if (!string.IsNullOrEmpty(profilePictureUrl))
                        {
                            <img src="@profilePictureUrl" alt="@post.Username" style="width:100%;height:100%;border-radius:50%;object-fit:cover;" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                            <div class="avatar-placeholder" style="display:none;">
                                @((post.Username ?? "U").Substring(0, 1).ToUpper())
                            </div>
                        }
                        else
                        {
                            <div class="avatar-placeholder">
                                @((post.Username ?? "U").Substring(0, 1).ToUpper())
                            </div>
                        }
                    </div>
                    <div class="user-details">
                        <span class="username">@(post.Username ?? "Anonymous")</span>
                        <span class="post-date">@publishDate</span>
                    </div>
                </a>
            </div>
            @if (config.ShowCategory)
            {
                <div class="post-category">
                    <span class="category-badge">@post.Category</span>
                </div>
            }
        </div>
    }

    <div class="post-content" onclick="openPost(@post.ArticleID)">
        <h3 class="post-title">@post.Title</h3>
        
        @if (config.ShowImage && !string.IsNullOrEmpty(post.ImageURL))
        {
            <div class="post-image">
                <img src="@post.ImageURL" alt="@post.Title" loading="lazy" />
            </div>
        }
        
        <p class="post-text">
            @if (config.ShowFullContent)
            {
                @Html.Raw(Html.Encode(post.Content).Replace("\n", "<br />"))
            }
            else
            {
                @((post.Content?.Length ?? 0) > config.ContentPreviewLength ? 
                  post.Content?.Substring(0, config.ContentPreviewLength) + "..." : 
                  post.Content)
            }
        </p>
        
        @if (config.ShowSource && !string.IsNullOrEmpty(post.SourceURL))
        {
            <div class="post-source">
                <i class="fas fa-external-link-alt"></i>
                <a href="@post.SourceURL" target="_blank" rel="noopener">
                    @(post.SourceName ?? "Source")
                </a>
            </div>
        }
    </div>

    @if (config.ShowStats || config.EnableInteractions)
    {
        <div class="post-actions">
            @if (config.ShowStats)
            {
                <div class="post-stats">
                    <span class="stat">
                        <i class="fas fa-heart @(post.IsLiked ? "liked" : "")"></i>
                        <span class="likes-count">@(post.LikesCount)</span>
                    </span>
                    <span class="stat">
                        <i class="fas fa-eye"></i>
                        <span>@(post.ViewsCount)</span>
                    </span>
                </div>
            }
            
            @if (config.EnableInteractions)
            {
                <div class="post-buttons">
                    <button class="action-btn like-btn @(post.IsLiked ? "active" : "")" 
                            onclick="toggleLike(@post.ArticleID, this)" data-post-id="@post.ArticleID">
                        <i class="fas fa-heart"></i>
                        <span>@(post.IsLiked ? "Liked" : "Like")</span>
                    </button>
                    <button class="action-btn comment-btn" onclick="openPost(@post.ArticleID)">
                        <i class="fas fa-comment"></i>
                        <span>Comment</span>
                    </button>
                    <button class="action-btn save-btn @(post.IsSaved ? "active" : "")" 
                            onclick="toggleSave(@post.ArticleID, this)">
                        <i class="fas fa-bookmark"></i>
                        <span>@(post.IsSaved ? "Saved" : "Save")</span>
                    </button>
                    <button class="action-btn share-btn" onclick="sharePost(@post.ArticleID)">
                        <i class="fas fa-share"></i>
                        <span>Share</span>
                    </button>
                </div>
            }
        </div>
    }
</div>
