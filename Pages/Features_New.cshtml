@page
@{
    ViewData["Title"] = "Features & Documentation - NewsSitePro";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="features-container">
    <!-- Page Header -->
    <div class="page-header">
        <h1><i class="fas fa-star"></i> Features & Documentation</h1>
        <p class="header-description">Explore the technical features and capabilities of NewsSitePro</p>
    </div>

    <!-- Tab Navigation -->
    <div class="tab-navigation">
        <button class="tab-btn active" data-target="architecture">
            <i class="fas fa-sitemap"></i>
            <span>Architecture</span>
        </button>
        <button class="tab-btn" data-target="autosync">
            <i class="fas fa-sync-alt"></i>
            <span>Auto Sync</span>
        </button>
        <button class="tab-btn" data-target="trending">
            <i class="fas fa-fire"></i>
            <span>Trending Topics</span>
        </button>
        <button class="tab-btn" data-target="googleauth">
            <i class="fab fa-google"></i>
            <span>Google Auth</span>
        </button>
    </div>

    <!-- Content Container -->
    <div class="content-container">
        <div id="content-frame">
            <!-- Content will be loaded here -->
        </div>
    </div>
</div>

<style>
.features-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 1rem;
}

.page-header {
    text-align: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem;
    border-radius: 12px;
    margin-bottom: 2rem;
}

.page-header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
}

.page-header i {
    margin-right: 0.5rem;
}

.header-description {
    font-size: 1.1rem;
    opacity: 0.9;
    margin: 0;
}

.tab-navigation {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
}

.tab-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 1.5rem;
    background: white;
    border: 2px solid #e9ecef;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    font-weight: 500;
    color: #6c757d;
    min-width: 120px;
}

.tab-btn:hover {
    border-color: #667eea;
    color: #667eea;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.15);
}

.tab-btn.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-color: #667eea;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.25);
}

.tab-btn i {
    font-size: 1.5rem;
}

.content-container {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    min-height: 600px;
}

#content-frame {
    width: 100%;
    min-height: 600px;
    padding: 2rem;
    overflow-y: auto;
    max-height: 80vh;
}

.loading-state {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
    color: #6c757d;
    flex-direction: column;
    gap: 1rem;
}

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #667eea;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Responsive Design */
@@media (max-width: 768px) {
    .page-header {
        padding: 1.5rem;
    }

    .page-header h1 {
        font-size: 2rem;
    }

    .tab-navigation {
        gap: 0.5rem;
    }

    .tab-btn {
        padding: 0.75rem 1rem;
        min-width: 100px;
        font-size: 0.8rem;
    }

    .tab-btn i {
        font-size: 1.25rem;
    }

    #content-frame {
        padding: 1rem;
        max-height: 70vh;
    }
}

@@media (max-width: 576px) {
    .features-container {
        padding: 0.5rem;
    }

    .tab-navigation {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.5rem;
    }

    .tab-btn {
        padding: 0.75rem;
        min-width: auto;
    }
}

/* Styling for loaded content */
#content-frame h1, #content-frame h2, #content-frame h3 {
    color: #667eea;
}

#content-frame pre {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    border-left: 4px solid #667eea;
    overflow-x: auto;
}

#content-frame code {
    background: #f8f9fa;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    color: #e91e63;
}

#content-frame .highlight, #content-frame .success, #content-frame .warning {
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
}

#content-frame .highlight {
    background: #e7f3ff;
    border-left: 4px solid #667eea;
}

#content-frame .success {
    background: #d4edda;
    border-left: 4px solid #28a745;
    color: #155724;
}

#content-frame .warning {
    background: #fff3cd;
    border-left: 4px solid #ffc107;
    color: #856404;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-btn');
    const contentFrame = document.getElementById('content-frame');
    
    // Content mapping - these correspond to your HTML files
    const contentMap = {
        'architecture': '/architectureOverview.html',
        'autosync': '/autoSync.html',
        'trending': '/trendingTopicsOverview.html',
        'googleauth': '/googleAuth.html'
    };
    
    // Load content function
    async function loadContent(contentKey) {
        try {
            // Show loading state
            contentFrame.innerHTML = `
                <div class="loading-state">
                    <div class="loading-spinner"></div>
                    <p>Loading content...</p>
                </div>
            `;
            
            const response = await fetch(contentMap[contentKey]);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}`);
            }
            
            const htmlContent = await response.text();
            
            // Extract body content from the HTML
            const parser = new DOMParser();
            const doc = parser.parseFromString(htmlContent, 'text/html');
            const mainContent = doc.querySelector('main') || doc.querySelector('body');
            
            if (mainContent) {
                contentFrame.innerHTML = mainContent.innerHTML;
            } else {
                contentFrame.innerHTML = htmlContent;
            }
            
        } catch (error) {
            console.error('Error loading content:', error);
            contentFrame.innerHTML = `
                <div class="loading-state">
                    <i class="fas fa-exclamation-triangle" style="color: #dc3545; font-size: 2rem;"></i>
                    <p>Failed to load content. Please try again.</p>
                </div>
            `;
        }
    }
    
    // Tab click handlers
    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Update active state
            tabButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // Load content
            const target = this.getAttribute('data-target');
            loadContent(target);
        });
    });
    
    // Load default content (architecture)
    loadContent('architecture');
});
</script>
