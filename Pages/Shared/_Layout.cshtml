@using NewsSitePro.Models
@{
    var headerData = (HeaderViewModel)ViewData["HeaderData"];
}
<!-- ------------------------------------------------------------------------------
     _Layout.cshtml

     This is the main layout file for NewsSitePro. It defines the overall page structure,
     including the header, sidebars, main content area, and script/style includes. The layout
     uses a Twitter-like design and integrates partial views for header and side panels. It also
     includes JavaScript for UI interactions such as mobile menu toggling, authentication, post
     actions, category filtering, follow buttons, and trending topics navigation. Key sections
     and functions are commented for clarity.
------------------------------------------------------------------------------ -->
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/comments.css" />
    <link rel="stylesheet" href="~/css/trending-topics.css" />
    <link rel="stylesheet" href="~/css/notification-popup.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    @RenderSection("Styles", required: false)
    
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - NewsSitePro</title>
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <!-- Mobile Menu Toggle -->
    <button class="mobile-menu-toggle" id="mobileMenuToggle">â˜°</button>
    
    <!-- Header -->
    @await Html.PartialAsync("_HeaderPartial", headerData)
    
    <!-- Twitter-like Layout -->
    <div class="twitter-layout">
        <!-- Left Sidebar -->
        @await Html.PartialAsync("_LeftSidePanelPartial", headerData)
        
        <!-- Main Content -->
        <main role="main" class="main-content">
            @RenderBody()
        </main>
        
        <!-- Right Sidebar -->
        @await Html.PartialAsync("_RightSidePanelPartial", headerData)
    </div>
    
@RenderSection("Scripts", required: false)

    <!-- Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Auth Service -->
    <script src="~/js/auth-service.js?v=@DateTime.Now.Ticks"></script>
    <!-- Follow Status Manager -->
    <script src="~/js/follow-manager.js?v=@DateTime.Now.Ticks"></script>
    <!-- Comments System -->
    <script src="~/js/comments.js?v=@DateTime.Now.Ticks"></script>
    <!-- Trending Topics -->
    <script src="~/js/trending-topics.js?v=@DateTime.Now.Ticks"></script>
    <!-- Notification System -->
    <script src="~/js/notifications.js?v=@DateTime.Now.Ticks"></script>
    <!-- Repost System -->
    <script src="~/js/repost.js?v=@DateTime.Now.Ticks"></script>
    
    <script>
        // Mobile menu toggle
        const mobileMenuToggle = document.getElementById('mobileMenuToggle');
        const leftSidebar = document.querySelector('.left-sidebar');
        
        if (mobileMenuToggle && leftSidebar) {
            mobileMenuToggle.addEventListener('click', function() {
                leftSidebar.classList.toggle('open');
        // --------------------------------------------------------------------------
        // UI Interactions and Event Handlers
        // --------------------------------------------------------------------------
            });
            
            // Close menu when clicking outside
            document.addEventListener('click', function(e) {
                if (!leftSidebar.contains(e.target) && !mobileMenuToggle.contains(e.target)) {
            // Toggle left sidebar open/close on mobile menu button click
                    leftSidebar.classList.remove('open');
                }
            });
        }
            // Close menu when clicking outside the sidebar or toggle button

        // Logout functionality
        var logoutBtn = document.getElementById('logoutBtn');
        if (logoutBtn) {
            //console.log("Logout button found");
            logoutBtn.addEventListener('click', function (e) {
                //alert("Logout button clicked!");
                e.preventDefault();
                localStorage.removeItem('jwtToken');
                document.cookie = 'jwtToken=; Max-Age=0; path=/;';
            // Remove JWT token and redirect to login on logout
                window.location.href = window.ApiConfig.getApiUrl('/Login');
            });
        } else {
            console.log("Logout button not found");
        }

        // Post button functionality
        const postButton = document.getElementById('postButton');
        if (postButton) {
            postButton.addEventListener('click', async function (e) {
                e.preventDefault();
                const jwt = localStorage.getItem('jwtToken');
                if (jwt) {
                    try {
                        const response = await fetch(window.ApiConfig.getApiUrl('/api/Auth/validate'), {
            // Validate JWT and redirect to post page if authenticated
                            method: 'POST',
                            headers: {
                                'Authorization': `Bearer ${jwt}`
                            }
                        });

                        if (response.ok) {
                            window.location.href = window.ApiConfig.getApiUrl(`/Post`);
                        } else {
                            alert('Your session has expired. Please log in again.');
                            localStorage.removeItem('jwtToken');
                            window.location.href = window.ApiConfig.getApiUrl('/Login');
                        }
                    } catch (error) {
                        console.error('Error validating token:', error);
                        alert('An error occurred. Please try again.');
                    }
                } else {
                    alert('You must be logged in to view posts.');
                    window.location.href = window.ApiConfig.getApiUrl('/Login');
                }
            });
        }

        // Category filtering
        document.querySelectorAll('.category-item').forEach(item => {
            item.addEventListener('click', function(e) {
                e.preventDefault();
                const category = this.dataset.category;
                if (typeof window.filterPostsByCategory === 'function') {
                    window.filterPostsByCategory(category);
                }
            // Filter posts by selected category
            });
        });

        // Follow button functionality
        document.querySelectorAll('.follow-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                if (this.textContent === 'Follow') {
                    this.textContent = 'Following';
                    this.style.background = '#657786';
                } else {
                    this.textContent = 'Follow';
            // Toggle follow/unfollow button state
                    this.style.background = '#1da1f2';
                }
            });
        });

        // Trending topics functionality
        document.querySelectorAll('.trending-item').forEach(item => {
            item.addEventListener('click', function() {
                const category = this.dataset.category;
                const topic = this.dataset.topic;
                
                if (category && topic) {
                    // Navigate to search page with the trending topic
            // Navigate to search page with trending topic or category
                    window.location.href = window.ApiConfig.getApiUrl(`/Search?q=${encodeURIComponent('#' + topic)}&category=${encodeURIComponent(category)}&type=posts`);
                } else if (category) {
                    // Navigate to search page with just the category
                    window.location.href = window.ApiConfig.getApiUrl(`/Search?category=${encodeURIComponent(category)}&type=posts`);
                }
            });
            
            // Add hover effect
            item.style.cursor = 'pointer';
        });
    </script>
</body>
</html>
            // Add pointer cursor on trending items