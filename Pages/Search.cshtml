@page
@model NewsSite.Pages.SearchModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = !string.IsNullOrEmpty(Model.SearchQuery) ? $"Search: {Model.SearchQuery}" : "Search";
    ViewData["HeaderData"] = Model.HeaderData;
}

<div class="search-container">
    <!-- Search Header -->
    <div class="search-header">
        <h2>
            @if (!string.IsNullOrEmpty(Model.SearchQuery))
            {
                <span>Search results for "<strong>@Model.SearchQuery</strong>"</span>
            }
            else
            {
                <span>Search</span>
            }
        </h2>
        @if (Model.TotalResults > 0)
        {
            <p class="search-stats">@Model.TotalResults results found</p>
        }
    </div>

    <!-- Advanced Search Form -->
    <div class="search-form-container">
        <form method="get" class="advanced-search-form">
            <div class="search-filters">
                <div class="filter-group">
                    <label>Category:</label>
                    <select name="category" class="filter-select">
                        <option value="" @(string.IsNullOrEmpty(Model.Category) ? "selected" : "")>All Categories</option>
                        <option value="Technology" @(Model.Category == "Technology" ? "selected" : "")>Technology</option>
                        <option value="Sports" @(Model.Category == "Sports" ? "selected" : "")>Sports</option>
                        <option value="Politics" @(Model.Category == "Politics" ? "selected" : "")>Politics</option>
                        <option value="Entertainment" @(Model.Category == "Entertainment" ? "selected" : "")>Entertainment</option>
                        <option value="Health" @(Model.Category == "Health" ? "selected" : "")>Health</option>
                        <option value="Business" @(Model.Category == "Business" ? "selected" : "")>Business</option>
                        <option value="Science" @(Model.Category == "Science" ? "selected" : "")>Science</option>
                    </select>
                </div>
            </div>
            
            <div class="search-input-container">
                <input type="text" name="q" value="@Model.SearchQuery" placeholder="Search posts, users, topics..." class="search-input" id="mainSearchInput" autocomplete="off">
                <div class="search-suggestions" id="searchSuggestions"></div>
                <button type="submit" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>

    <!-- Search Results -->
    @if (!string.IsNullOrEmpty(Model.SearchQuery))
    {
        <div class="search-results">
            <!-- Posts Results -->
            <div class="results-section" id="postsResults">
                @if (Model.SearchResults.Any())
                {
                    <div class="posts-grid">
                        @foreach (var article in Model.SearchResults)
                        {
                            <div class="search-result-card post-card">
                                <div class="post-header">
                                    <div class="post-author">
                                        <div class="author-avatar">
                                            @(article.UserName?.Substring(0, 1).ToUpper() ?? "U")
                                        </div>
                                        <div class="author-info">
                                            <span class="author-name">@article.UserName</span>
                                            <span class="post-date">@article.PublishDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                    </div>
                                    <span class="post-category">@article.Category</span>
                                </div>
                                
                                <div class="post-content">
                                    <h3 class="post-title">
                                        <a href="#" onclick="openPost(@article.ArticleID); return false;">@article.Title</a>
                                    </h3>
                                    <p class="post-excerpt">
                                        @(article.Content?.Length > 200 ? article.Content.Substring(0, 200) + "..." : article.Content)
                                    </p>
                                    
                                    @if (!string.IsNullOrEmpty(article.ImageURL))
                                    {
                                        <div class="post-image">
                                            <img src="@article.ImageURL" alt="@article.Title" />
                                        </div>
                                    }
                                </div>
                                
                                <div class="post-stats">
                                    <div class="stat-item">
                                        <i class="fas fa-heart"></i>
                                        <span>@article.LikesCount</span>
                                    </div>
                                    <div class="stat-item">
                                        <i class="fas fa-eye"></i>
                                        <span>@article.ViewsCount</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(article.SourceURL))
                                    {
                                        <div class="stat-item">
                                            <a href="@article.SourceURL" target="_blank" class="source-link">
                                                <i class="fas fa-external-link-alt"></i>
                                                Source
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-results">
                        <i class="fas fa-search"></i>
                        <h3>No posts found</h3>
                        <p>Try adjusting your search terms or category filter</p>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <a href="?q=@Model.SearchQuery&category=@Model.Category&page=@(Model.CurrentPage - 1)" class="page-btn">
                            <i class="fas fa-chevron-left"></i> Previous
                        </a>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <a href="?q=@Model.SearchQuery&category=@Model.Category&page=@i" 
                           class="page-btn @(i == Model.CurrentPage ? "active" : "")">@i</a>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <a href="?q=@Model.SearchQuery&category=@Model.Category&page=@(Model.CurrentPage + 1)" class="page-btn">
                            Next <i class="fas fa-chevron-right"></i>
                        </a>
                    }
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <link rel="stylesheet" href="~/css/search.css" />
    <script src="~/js/search.js"></script>
    <script>
        // Function to navigate to a post using the correct API URL
        function openPost(postId) {
            window.location.href = window.ApiConfig.getApiUrl(`/Post/${postId}`);
        }
    </script>
}
